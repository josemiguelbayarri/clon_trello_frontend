[{"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\index.js":"1","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\App.jsx":"3","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Welcome\\Welcome.jsx":"4","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Login\\Login.jsx":"5","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Register\\Register.jsx":"6","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Header\\Header.jsx":"7","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Boards\\Boards.jsx":"8","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\ModalCenter\\ModalCenter.jsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":748,"mtime":1608029126471,"results":"13","hashOfConfig":"11"},{"size":1281,"mtime":1607967007379,"results":"14","hashOfConfig":"11"},{"size":3308,"mtime":1608029159152,"results":"15","hashOfConfig":"11"},{"size":3623,"mtime":1607966981649,"results":"16","hashOfConfig":"11"},{"size":2428,"mtime":1608032034546,"results":"17","hashOfConfig":"11"},{"size":2706,"mtime":1608292615247,"results":"18","hashOfConfig":"11"},{"size":5718,"mtime":1608635337331,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"11u4jif",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\index.js",[],["42","43"],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\App.jsx",[],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Welcome\\Welcome.jsx",[],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Login\\Login.jsx",[],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Register\\Register.jsx",[],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Header\\Header.jsx",["44"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport DashboardOutlinedIcon from \"@material-ui/icons/DashboardOutlined\";\r\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\r\nimport NotificationsNoneOutlinedIcon from \"@material-ui/icons/NotificationsNoneOutlined\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo_header from \"../Images/logo_header.png\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n}));\r\n\r\nfunction Header() {\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"user\");\r\n    console.log(\"este es el token\", token);\r\n    setToken(token);\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <header className=\"cabecera\">\r\n        <div className=\"left\">\r\n          <div className=\"icons\">\r\n            <AppsIcon fontSize=\"small\" />\r\n          </div>\r\n          <div className=\"icons\">\r\n            <HomeOutlinedIcon fontSize=\"small\" />\r\n          </div>\r\n          <div className=\"icons\">\r\n            <DashboardOutlinedIcon fontSize=\"small\" />\r\n            <span className=\"icon_title\">Tableros</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"center\">\r\n          <Link to=\"/boards\" className=\"logo_header\">\r\n            <img src={logo_header} alt=\"\" />\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"right\">\r\n          <div className=\"icons\">\r\n            <AddOutlinedIcon />\r\n          </div>\r\n          <div className=\"icons\">\r\n            <InfoOutlinedIcon />\r\n          </div>\r\n          <div className=\"icons\">\r\n            <NotificationsNoneOutlinedIcon />\r\n          </div>\r\n          <div className=\"icons_image\">\r\n            <Avatar className={classes.orange}>N</Avatar>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n",["45","46"],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Boards\\Boards.jsx",[],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\ModalCenter\\ModalCenter.jsx",["47"],"import React, { useState } from \"react\";\r\nimport \"./ModalCenter.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DashboardOutlinedIcon from \"@material-ui/icons/DashboardOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"60px\",\r\n  },\r\n  paper: {\r\n    backgroundColor: \"transparent\",\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [color, setColor] = useState(\"AntiqueWhite\");\r\n\r\n  const history = useHistory();\r\n\r\n  const [datos, setDatos] = useState({\r\n    name: \"\",\r\n    color: color,\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    setDatos({\r\n      ...datos,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const board = {\r\n      name: datos.name,\r\n      color: color,\r\n    };\r\n\r\n    Axios.post(\"http://localhost:3000/boards/create\", board).then((res) => {\r\n      const board = res.data;\r\n      console.log(\"tablero creado: \", board);\r\n    });\r\n\r\n    setTimeout(() => {\r\n      /* history.push(\"/login\"); */\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div onClick={handleOpen} className=\"tableros tablero_crear\">\r\n        <h4 className=\"tableros_title2\">Crear un nuevo tablero</h4>\r\n      </div>\r\n\r\n      <Modal\r\n        disableEnforceFocus\r\n        disableAutoFocus\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          {/* <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Transition modal</h2>\r\n            <p id=\"transition-modal-description\">\r\n              react-transition-group animates me.\r\n            </p>\r\n          </div> */}\r\n          <div className=\"main_modal\">\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"modal_general\">\r\n                <div className=\"modal_izquierda\" style={{ background: color }}>\r\n                  <div className=\"margenes\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      onChange={handleInputChange}\r\n                      placeholder=\"Añadir título de tablero\"\r\n                    />\r\n                    <input\r\n                      onChange={handleInputChange}\r\n                      type=\"hidden\"\r\n                      name=\"color\"\r\n                      defaultValue={color}\r\n                    />\r\n                    <p>Espacio de trabajo de Trello</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal_derecha\">\r\n                  <div\r\n                    className=\"boton_1\"\r\n                    onClick={() => {\r\n                      setColor(\"AntiqueWhite\");\r\n                    }}\r\n                  ></div>\r\n                  <div\r\n                    className=\"boton_2\"\r\n                    onClick={() => {\r\n                      setColor(\"DarkOrchid\");\r\n                    }}\r\n                  ></div>\r\n                  <div\r\n                    className=\"boton_3\"\r\n                    onClick={() => {\r\n                      setColor(\"orange\");\r\n                    }}\r\n                  ></div>\r\n                  <div\r\n                    className=\"boton_4\"\r\n                    onClick={() => {\r\n                      setColor(\"YellowGreen\");\r\n                    }}\r\n                  ></div>\r\n                  <div\r\n                    className=\"boton_5\"\r\n                    onClick={() => {\r\n                      setColor(\"purple\");\r\n                    }}\r\n                  ></div>\r\n                  <div\r\n                    className=\"boton_6\"\r\n                    onClick={() => {\r\n                      setColor(\"pink\");\r\n                    }}\r\n                  ></div>\r\n                  <div\r\n                    className=\"boton_7\"\r\n                    onClick={() => {\r\n                      setColor(\"yellow\");\r\n                    }}\r\n                  ></div>\r\n                  <div\r\n                    className=\"boton_8\"\r\n                    onClick={() => {\r\n                      setColor(\"green\");\r\n                    }}\r\n                  ></div>\r\n                  <div\r\n                    className=\"boton_9\"\r\n                    onClick={() => {\r\n                      setColor(\"red\");\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"submodal\">\r\n                <div className=\"modal_abajo\">\r\n                  <button type=\"submit\">Crear tablero</button>\r\n                  <DashboardOutlinedIcon fontSize=\"small\" />{\" \"}\r\n                  <span className=\"plantilla_crear\">\r\n                    {\" \"}\r\n                    Empiece con una plantilla\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":29,"column":10,"nodeType":"54","messageId":"55","endLine":29,"endColumn":15},{"ruleId":"48","replacedBy":"56"},{"ruleId":"50","replacedBy":"57"},{"ruleId":"52","severity":1,"message":"58","line":38,"column":9,"nodeType":"54","messageId":"55","endLine":38,"endColumn":16},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar",["59"],["60"],"'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]