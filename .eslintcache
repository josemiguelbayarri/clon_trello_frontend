[{"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\index.js":"1","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\App.jsx":"2","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Welcome\\Welcome.jsx":"3","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Login\\Login.jsx":"4","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Register\\Register.jsx":"5","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Header\\Header.jsx":"6","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Boards\\Boards.jsx":"7","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\ModalCenter\\ModalCenter.jsx":"8","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\PersonalBoard\\PersonalBoard.jsx":"9","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\util.js":"10","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\ModalTask\\ModalTask.jsx":"11","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\ProtectedRoute\\ProtectedRoute.jsx":"12"},{"size":434,"mtime":1610488883411,"results":"13","hashOfConfig":"14"},{"size":1184,"mtime":1611227518510,"results":"15","hashOfConfig":"14"},{"size":1281,"mtime":1607967007379,"results":"16","hashOfConfig":"14"},{"size":3358,"mtime":1609842353913,"results":"17","hashOfConfig":"14"},{"size":3623,"mtime":1607966981649,"results":"18","hashOfConfig":"14"},{"size":3111,"mtime":1611227572499,"results":"19","hashOfConfig":"14"},{"size":3311,"mtime":1609152973006,"results":"20","hashOfConfig":"14"},{"size":5427,"mtime":1610380899899,"results":"21","hashOfConfig":"14"},{"size":8071,"mtime":1610642774580,"results":"22","hashOfConfig":"14"},{"size":68,"mtime":1610491232739,"results":"23","hashOfConfig":"14"},{"size":2878,"mtime":1610623236633,"results":"24","hashOfConfig":"14"},{"size":446,"mtime":1611227442671,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"11u4jif",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\index.js",[],["54","55"],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\App.jsx",["56"],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Welcome\\Welcome.jsx",[],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Login\\Login.jsx",[],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Register\\Register.jsx",[],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Header\\Header.jsx",["57","58","59","60","61","62","63"],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\Boards\\Boards.jsx",["64"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport \"./Boards.css\";\r\nimport DashboardOutlinedIcon from \"@material-ui/icons/DashboardOutlined\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\r\nimport ModalCenter from \"../ModalCenter/ModalCenter\";\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Boards() {\r\n  const userId = localStorage.getItem(\"userId\");\r\n  const [boards, setBoards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(`http://localhost:3000/boards/` + userId).then((res) => {\r\n      const boards = res.data;\r\n      setBoards(boards);\r\n      console.log(boards);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"boards\">\r\n      <Header />\r\n      <div className=\"boards_general\">\r\n        <div className=\"boards_left\">\r\n          <div className=\"caja_tablero\">\r\n            <DashboardOutlinedIcon fontSize=\"small\" />\r\n\r\n            <span className=\"icon_title2\">Tableros</span>\r\n          </div>\r\n          <div className=\"caja_tablero2\">\r\n            <DashboardOutlinedIcon fontSize=\"small\" />\r\n\r\n            <span className=\"icon_title2\">Plantillas</span>\r\n          </div>\r\n          <div className=\"caja_tablero2\">\r\n            <DashboardOutlinedIcon fontSize=\"small\" />\r\n\r\n            <span className=\"icon_title2\">Inicio</span>\r\n          </div>\r\n          <div className=\"equipos1\">\r\n            <p>Equipos</p>\r\n          </div>\r\n          <div className=\"equipos2\">\r\n            <AddOutlinedIcon color=\"action\" fontSize=\"small\" />\r\n\r\n            <span className=\"icon_title2\">Cree un equipo</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"boards_center\">\r\n          <div className=\"titulo_tableros\">\r\n            <AddOutlinedIcon color=\"action\" />\r\n            <span className=\"tablero_title\">Creaci√≥n de Nuevo Tablero</span>\r\n          </div>\r\n          <ModalCenter />\r\n          <div className=\"titulo_tableros\">\r\n            <PersonOutlineOutlinedIcon color=\"action\" />\r\n            <span className=\"tablero_title\">Tableros personales</span>\r\n          </div>\r\n\r\n          <div className=\"main_tableros\">\r\n            {boards?.map((board) => (\r\n              <Link className=\"ancla_personal_board\" to={\"/board/\" + board.id}>\r\n                <div className=\"tableros\" style={{ background: board.color }}>\r\n                  <h4 className=\"tableros_title\">{board.name}</h4>\r\n                </div>\r\n              </Link>\r\n            ))}\r\n            {/* <div className=\"tableros\">\r\n              <h4 className=\"tableros_title\">Web Development</h4>\r\n            </div>\r\n            <div className=\"tableros\">\r\n              <h4 className=\"tableros_title\">Web Development</h4>\r\n            </div>\r\n            <div className=\"tableros\">\r\n              <h4 className=\"tableros_title\">Web Development</h4>\r\n            </div>\r\n            <div className=\"tableros\">\r\n              <h4 className=\"tableros_title\">Web Development</h4>\r\n            </div>\r\n            <div className=\"tableros\">\r\n              <h4 className=\"tableros_title\">Web Development</h4>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Boards;\r\n","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\ModalCenter\\ModalCenter.jsx",[],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\PersonalBoard\\PersonalBoard.jsx",["65","66","67","68","69"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AdaptiveHeader from \"../Header/Header\";\r\nimport \"./PersonalBoard.css\";\r\nimport Axios from \"axios\";\r\nimport DashboardOutlinedIcon from \"@material-ui/icons/DashboardOutlined\";\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport ModalTask from \"../ModalTask/ModalTask\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\r\nimport { util } from \"../../util\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nfunction PersonalBoard() {\r\n  const { id } = useParams();\r\n  const [personalBoards, setPersonalBoards] = useState(\"\");\r\n  const [newPlank, setNewPlank] = useState(\"\");\r\n  const [personalPlanks, setPersonalPlanks] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  \r\n    \r\n\r\n  const nickLogged = localStorage.getItem(\"name\");\r\n  /* console.log(nameLogged); */\r\n\r\n  useEffect(() => {\r\n    Axios.get(`http://localhost:3000/boards/board/` + id).then((res) => {\r\n      const personalBoards = res.data;\r\n      setPersonalBoards(personalBoards);\r\n      console.log(personalBoards);\r\n    });\r\n    Axios.get(`http://localhost:3000/planks/` + id).then((res) => {\r\n      const planks = res.data;\r\n      setPersonalPlanks(planks);\r\n      console.log(\"soy una lista preciosa\" + personalPlanks);\r\n    });\r\n    Axios.get(`http://localhost:3000/tasks/` + personalPlanks.id).then((res) => {\r\n      const tasks = res.data;\r\n      setTasks(tasks);\r\n      console.log(\"soy una tarea preciosa\" + tasks);\r\n    });\r\n  }, []);\r\n\r\n  const deletePlank = (id) => {\r\n    Axios.delete(`http://localhost:3000/planks/` + id).then((res) => {\r\n      const plank = res.data;\r\n      /* personalPlanks = personalPlanks.filter(function(plank) {\r\n        return plank.id !== id; \r\n      });\r\n      console.log(personalPlanks); */\r\n\r\n      const newPlanks = personalPlanks.filter((item) => item.id !== id);\r\n      setPersonalPlanks(newPlanks);\r\n      console.log(newPlanks);\r\n      console.log(\"la lista a sido eliminada\" + plank);\r\n    });\r\n  };\r\n\r\n  const [datos, setDatos] = useState({\r\n    name: \"\",\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    setDatos({\r\n      ...datos,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const keyPressed = ({ key }) => {\r\n    // Capture search on Enter key\r\n    if (key === \"Enter\") {\r\n      onSubmit();\r\n    }\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const plank = {\r\n      name: datos.name,\r\n      boardId: id,\r\n      /* userId: userId, */\r\n    };\r\n\r\n    Axios.post(\"http://localhost:3000/planks/create\", plank).then((res) => {\r\n      const newPlank = res.data;\r\n      setNewPlank(newPlank);\r\n      console.log(\"lista creada: \", newPlank);\r\n      setPersonalPlanks((personalPlanks) => personalPlanks.concat(newPlank));\r\n    });\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  }));\r\n\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onSubmit2 = (event) => {\r\n    event.preventDefault();\r\n\r\n    const task = {\r\n      description: datos.description,\r\n      plankId: personalPlanks.id, \r\n    };\r\n\r\n    Axios.post(\"http://localhost:3000/tasks/create\", task).then((res) => {\r\n      const newTask = res.data;\r\n      handleClose();\r\n      console.log(\"tarea creada: \", newTask);\r\n    });\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"personal_boards\">\r\n      <div\r\n        className=\"personal_main\"\r\n        style={{ background: personalBoards?.color }}\r\n      >\r\n        <AdaptiveHeader />\r\n\r\n        <div className=\"personal_menu\">\r\n          <div className=\"personal_menu_left\">\r\n            <div className=\"personal_menu_buttons\">\r\n              <DashboardOutlinedIcon fontSize=\"small\" />\r\n              <p>Tablero</p>\r\n            </div>\r\n            <div className=\"personal_menu_buttons\">\r\n              <h1>{personalBoards?.name}</h1>\r\n            </div>\r\n            <div className=\"personal_menu_buttons\">\r\n              <StarBorderOutlinedIcon fontSize=\"small\" />\r\n            </div>\r\n            <div className=\"personal_menu_buttons\">\r\n              <p>Espacio de trabajo de trello free</p>\r\n            </div>\r\n            <div className=\"personal_menu_buttons\">\r\n              <p>Visible para el equipo</p>\r\n            </div>\r\n            <div className=\"personal_menu_buttons_avatar\">\r\n              <span className=\"personal_board_avatar\">\r\n                <Avatar>{nickLogged.charAt(0)}</Avatar>\r\n              </span>\r\n            </div>\r\n            <div className=\"personal_menu_buttons\">\r\n              <p>invitar</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"personal_menu_right\">\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"new_plank\">\r\n                <input\r\n                  onChange={handleInputChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  required\r\n                  placeholder=\"Introduzca el t√≠tulo de la lista...\"\r\n                  onKeyPress={keyPressed}\r\n                />\r\n\r\n                <button type=\"submit\">\r\n                  <AddOutlinedIcon fontSize=\"large\" />\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"main_plank\">\r\n          {personalPlanks?.map((plank) => (\r\n            <div className=\"plank\" key={plank.id}>\r\n              \r\n              <div className=\"plank_div\">\r\n                <h2 className=\"plank_name\">{plank.name}</h2>\r\n                <span onClick={() => deletePlank(plank.id)}>\r\n                  <CloseOutlinedIcon fontSize=\"small\" />\r\n                </span>\r\n              </div>\r\n              <div className=\"modal_board_button\">\r\n                <div onClick={handleOpen} className=\"task_button\">\r\n                  <button type=\"submit\">\r\n                    <AddOutlinedIcon fontSize=\"medium\" />\r\n                    A√±ada otra tarjeta\r\n                  </button>\r\n                </div>\r\n\r\n                <Modal\r\n                  disableEnforceFocus\r\n                  disableAutoFocus\r\n                  aria-labelledby=\"transition-modal-title\"\r\n                  aria-describedby=\"transition-modal-description\"\r\n                  className={classes.modal}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  closeAfterTransition\r\n                  BackdropComponent={Backdrop}\r\n                  BackdropProps={{\r\n                    timeout: 500,\r\n                  }}\r\n                >\r\n                  <Fade in={open}>\r\n                    <div className=\"modal_board_task\">\r\n                      <form onSubmit={onSubmit2}>\r\n                        <input\r\n                          onChange={handleInputChange}\r\n                          type=\"text\"\r\n                          name=\"description\"\r\n                          placeholder=\"Introduzca un t√≠tulo para esta tarjeta...\"\r\n                        />\r\n                        <div className=\"modal_button\">\r\n                          <button type=\"submit\">A√±adir tarjeta</button>\r\n                          <span onClick={handleClose}>\r\n                            <CloseOutlinedIcon fontSize=\"medium\" />\r\n                          </span>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </Fade>\r\n                </Modal>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonalBoard;\r\n","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\util.js",[],"C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\ModalTask\\ModalTask.jsx",["70"],"import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./ModalTask.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Axios from \"axios\";\r\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport { util } from \"../../util\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const { id } = useParams();\r\n\r\n  /* const userId = localStorage.getItem(\"userId\"); */\r\n\r\n  const [datos, setDatos] = useState({\r\n    name: \"\",\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    setDatos({\r\n      ...datos,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const task = {\r\n      description: datos.description,\r\n      plankId: id, \r\n    };\r\n\r\n    Axios.post(\"http://localhost:3000/tasks/create\", task).then((res) => {\r\n      const newTask = res.data;\r\n      \r\n      \r\n      handleClose();\r\n      console.log(\"tarea creada: \", newTask);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div onClick={handleOpen} className=\"task_button\">\r\n        <button type=\"submit\">\r\n          <AddOutlinedIcon fontSize=\"medium\" />\r\n          A√±ada otra tarjeta\r\n        </button>\r\n      </div>\r\n\r\n      <Modal\r\n        disableEnforceFocus\r\n        disableAutoFocus\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className=\"modal_board_task\">\r\n            <form onSubmit={onSubmit}>\r\n              <input\r\n                onChange={handleInputChange}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Introduzca un t√≠tulo para esta tarjeta...\"\r\n              />\r\n              <div className=\"modal_button\">\r\n                <button type=\"submit\">A√±adir tarjeta</button>\r\n                <span onClick={handleClose}>\r\n                  <CloseOutlinedIcon fontSize=\"medium\" />\r\n                </span>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Jose\\Desktop\\PROYECTOS_POWER_UP\\clon_de_trello\\frontend\\clon_trello_frontend\\src\\components\\ProtectedRoute\\ProtectedRoute.jsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":12,"column":10,"nodeType":"77","messageId":"78","endLine":12,"endColumn":15},{"ruleId":"75","severity":1,"message":"79","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"80","line":1,"column":28,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"81","line":12,"column":10,"nodeType":"77","messageId":"78","endLine":12,"endColumn":20},{"ruleId":"75","severity":1,"message":"82","line":13,"column":10,"nodeType":"77","messageId":"78","endLine":13,"endColumn":20},{"ruleId":"75","severity":1,"message":"83","line":16,"column":10,"nodeType":"77","messageId":"78","endLine":16,"endColumn":20},{"ruleId":"75","severity":1,"message":"84","line":48,"column":13,"nodeType":"77","messageId":"78","endLine":48,"endColumn":18},{"ruleId":"75","severity":1,"message":"85","line":48,"column":30,"nodeType":"77","messageId":"78","endLine":48,"endColumn":37},{"ruleId":"86","severity":1,"message":"87","line":21,"column":6,"nodeType":"88","endLine":21,"endColumn":8,"suggestions":"89"},{"ruleId":"75","severity":1,"message":"90","line":8,"column":8,"nodeType":"77","messageId":"78","endLine":8,"endColumn":17},{"ruleId":"75","severity":1,"message":"91","line":12,"column":10,"nodeType":"77","messageId":"78","endLine":12,"endColumn":14},{"ruleId":"75","severity":1,"message":"92","line":22,"column":10,"nodeType":"77","messageId":"78","endLine":22,"endColumn":18},{"ruleId":"75","severity":1,"message":"93","line":24,"column":10,"nodeType":"77","messageId":"78","endLine":24,"endColumn":15},{"ruleId":"86","severity":1,"message":"94","line":47,"column":6,"nodeType":"88","endLine":47,"endColumn":8,"suggestions":"95"},{"ruleId":"75","severity":1,"message":"91","line":11,"column":10,"nodeType":"77","messageId":"78","endLine":11,"endColumn":14},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'makeStyles' is defined but never used.","'deepOrange' is defined but never used.","'useHistory' is defined but never used.","'match' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["98"],"'ModalTask' is defined but never used.","'util' is defined but never used.","'newPlank' is assigned a value but never used.","'tasks' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'personalPlanks'. Either include them or remove the dependency array.",["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [userId]",{"range":"104","text":"105"},"Update the dependencies array to be: [id, personalPlanks]",{"range":"106","text":"107"},[777,779],"[userId]",[1830,1832],"[id, personalPlanks]"]